name: 'OpenVINO provider'
description: 'Provides OpenVINO build artifacts from a requested source'
inputs:
  revision:
    description: 'Version of OpenVINO to provide - latest_available | HEAD | specific commit hash'
    required: true
  artifacts_source:
    description: "From where to take artifacts: postcommit | s3"
    default: "postcommit"
    required: false
  branch_name:
    description: 'Branch of OpenVINO to take the revision from if no specific hash was provided. 
                  Taken from github context by default'
    required: false
  ov_artifact_name:
    description: "Name under which to upload provided OpenVINO build artifacts, set automatically by default"
    required: false
  platform:
    description: "Platform for which to get artifacts: centos7_x86_64 | debian10_armhf | rhel8_x86_64 | ubuntu20_arm64 | 
      ubuntu20_x86_64 | ubuntu22_x86_64 | ubuntu24_x86_64 | macos_12_6_arm64 | macos_12_6_x86_64 | windows_x86_64"
    required: false
  package_url:
    description: 'Direct URL to OpenVINO archive to use, if neither post-commit nor nightly archives are required'
    required: false
  install_dir:
    description: 'Local path to install OpenVINO package to. If not specified, package is installed to GitHub workspace 
                  and uploaded to GitHub'
    required: false
  commit_packages_to_provide:
    description: "Comma-separated list of OpenVINO packages from post-commit to provide ('all' to get everything)"
    required: false
  commit_share_path:
    description: 'Path to share holding OpenVINO post-commit artifacts'
    required: false
    default: '/mount/build-artifacts'
  nightly_package_source:
    description: 'Source URL hosting OpenVINO nightly archives'
    required: false
    default: 'https://storage.openvinotoolkit.org/repositories/openvino/packages/nightly/latest.json'
  pip_extra_url:
    description: 'Source URL hosting OpenVINO wheels, for passing to pip as --extra-index-url'
    required: false
    default: 'https://storage.openvinotoolkit.org/simple/wheels'

outputs:
  ov_artifact_name:
    description: "Name of the artifact to upload OpenVINO build artifacts under"
    value: ${{ steps.openvino_s3_download.outputs.ov_artifact_name || steps.openvino_commit_output.outputs.ov_artifact_name }}
  ov_wheel_source:
    description: "Pip option for custom OV wheel location (--find-links or --extra-index-url)"
    value: ${{ steps.openvino_s3_wheel.outputs.ov_wheel_source || steps.openvino_commit_wheel.outputs.ov_wheel_source }}
  ov_version:
    description: "OpenVINO product version"
    value: ${{ steps.openvino_s3_wheel.outputs.ov_version || steps.openvino_commit_wheel.outputs.ov_version }}

runs:
  using: "composite"
  steps:
    - name: Verify parameters
      if: ${{ !inputs.platform && !inputs.package_url }}
      shell: bash
      run: |
        echo 'Please specify either platform or package_url param'
        exit 1

    - name: Get action revision
      id: get_action_revision
      run: echo "action_ref=${{ env.ACTION_REF }}" >> $GITHUB_OUTPUT
      shell: bash
      env:
        ACTION_REF: ${{ github.action_ref || github.base_ref || github.event.merge_group.base_ref || github.ref }}

    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        repository: 'openvinotoolkit/openvino'
        ref: ${{ steps.get_action_revision.outputs.action_ref }}
        sparse-checkout: .github/actions

    - name: Clone OpenVINO to get HEAD commit
      if: inputs.revision == 'HEAD'
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        repository: 'openvinotoolkit/openvino'
        path: 'openvino'
        ref: ${{ inputs.branch_name || github.base_ref || github.event.merge_group.base_ref || github.ref }}

    - name: Get OpenVINO HEAD commit
      id: get_openvino_head_commit
      if: inputs.revision == 'HEAD'
      shell: bash
      run: |
        head=$(git -C openvino rev-parse HEAD)
        echo "head=$head" >> $GITHUB_OUTPUT

    - name: Create install dir
      if: inputs.install_dir
      shell: bash
      run: |
        mkdir -p ${{ inputs.install_dir }}

    # --- Post-commit case ---
    - name: Download post-commit OpenVINO archives
      id: openvino_commit_download
      if: inputs.artifacts_source == 'postcommit'
      uses: ./.github/actions/restore_artifacts
      with:
        platform: ${{ inputs.platform }}
        storage_root: ${{ inputs.commit_share_path }}
        event_name: "commit"
        trigger_repo_sha: ${{ env.OV_REVISION }}
        branch_name: ${{ inputs.branch_name }}
        to_restore: ${{ inputs.commit_packages_to_provide }}
        target_dir: ${{ inputs.install_dir }}
      env:
        OV_REVISION: ${{ inputs.revision == 'HEAD' && steps.get_openvino_head_commit.outputs.head || inputs.revision }}

    - name: Set action outputs
      id: openvino_commit_output
      if: steps.openvino_commit_download.outcome == 'success'
      shell: bash
      run: |
        ov_artifact_name=${{ inputs.ov_artifact_name || inputs.platform }}
        workspace_path=${{ steps.openvino_commit_download.outputs.artifacts_path }}
        cd $workspace_path
        ov_package_path=$(find . -name 'openvino_package*' -printf "%P\n" -quit)
        [ -z "$ov_package_path" ] && echo "No openvino_package found in restored artifacts" && exit 1
        mv $ov_package_path/* . && rm -rf $ov_package_path
        echo "ov_artifact_name=$ov_artifact_name" >> $GITHUB_OUTPUT
        echo "ov_package_path=$workspace_path" >> $GITHUB_OUTPUT

    - name: Get commit wheel
      id: openvino_commit_wheel
      if: steps.openvino_commit_download.outcome == 'success'
      shell: bash
      run: |
        artifacts_path=${{ steps.openvino_commit_download.outputs.artifacts_path }}
        cd $artifacts_path
        version=$(yq eval '.components.dldt.custom_params.wheel_product_version' manifest.yml)
        wheel_path=${{ inputs.install_dir && '$artifacts_path/tools' || './tools' }}
        default_find_links_cmd="--find-links=$wheel_path"
        find_links_cmd=$([[ -n "$PIP_FIND_LINKS" ]] && echo "" || echo "$default_find_links_cmd")
        echo "ov_version=$version" >> $GITHUB_OUTPUT
        echo "ov_wheel_source=$default_find_links_cmd" >> $GITHUB_OUTPUT

    - name: Upload commit OpenVINO archives
      if: steps.openvino_commit_download.outcome == 'success' && !inputs.install_dir
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.openvino_commit_output.outputs.ov_artifact_name }}
        path: ${{ steps.openvino_commit_output.outputs.ov_package_path }}
        if-no-files-found: 'error'

    # --- S3 case (nightly or direct URL) ---
    - name: Verify parameters
      if: inputs.artifacts_source == 's3' && inputs.revision != 'latest_available'
      shell: bash
      run: |
        echo "S3 build source provides only 'latest_available' artifacts, specific revision not yet supported"
        exit 1

    - name: Download OpenVINO archives
      id: openvino_s3_download
      if: inputs.artifacts_source == 's3' || inputs.package_url
      shell: bash
      run: |
        if [ ${{ inputs.package_url }} ]; then
          ov_package_url=${{ inputs.package_url }}
        else
          ov_package_url=$(curl -s ${{ inputs.nightly_package_source }} | jq -r '.${{ inputs.platform }}')
        fi
        cd ${{ inputs.install_dir || env.GITHUB_WORKSPACE }}
        package_basename=$(basename $ov_package_url)
        wget $ov_package_url --progress=bar:force:noscroll -O $package_basename
        package_folder=${package_basename%.*}
        [[ "$package_basename" == *.zip ]] && unzip "$package_basename" || tar -xvf "$package_basename"
        rm $package_basename
        if [ ${{ inputs.install_dir }} ]; then
          mv $package_folder/* . && rm -rf $package_folder
        fi
        ov_artifact_name=$([ ${{ inputs.ov_artifact_name }} ] && echo ${{ inputs.ov_artifact_name }} || echo $package_folder)
        echo "ov_artifact_name=$ov_artifact_name" >> $GITHUB_OUTPUT
        echo "ov_package_path=$package_folder" >> $GITHUB_OUTPUT

    - name: Upload OpenVINO archives
      if: steps.openvino_s3_download.outcome == 'success' && !inputs.install_dir
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.openvino_s3_download.outputs.ov_artifact_name }}
        path: ${{ steps.openvino_s3_download.outputs.ov_package_path }}
        if-no-files-found: 'error'

    - name: Get wheel
      id: openvino_s3_wheel
      if: steps.openvino_s3_download.outcome == 'success'
      shell: bash
      run: |
        rc_version=$(echo ${{ inputs.package_url }} |
          grep -oP '(?<=pre-release\/)\d{4}\.\d+\.\d+rc\d+' || true)

        release_version=$(echo ${{ steps.openvino_s3_download.outputs.ov_package_path }} |
          grep -oP '_\K\d{4}\.\d+\.\d+')
        
        dev_version=$(echo ${{ steps.openvino_s3_download.outputs.ov_package_path }} |
          grep -oP "${release_version//./\\.}\.dev\d{8}" || true)

        version=${rc_version:-${dev_version:-$release_version}}

        extra_index="--pre --extra-index-url ${{ inputs.pip_extra_url }}/nightly \
          --extra-index-url ${{ inputs.pip_extra_url }}/pre-release"

        echo "ov_version=$version" >> $GITHUB_OUTPUT
        echo "ov_wheel_source=$extra_index" >> $GITHUB_OUTPUT
